name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # 只有以 'v' 开头的标签触发工作流程
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew package

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-build
          path: build/compose/binaries/main/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download macOS build
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-build
          path: ./dist/macos

      - name: Download Windows build
        uses: actions/download-artifact@v2
        with:
          name: windows-latest-build
          path: ./dist/windows

      - name: Find macOS Build File
        id: find_macos_build
        run: echo "::set-output name=macos_build_file::$(ls ./dist/macos)"

      - name: Find Windows Build File
        id: find_windows_build
        run: echo "::set-output name=windows_build_file::$(ls ./dist/windows)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: true

      - name: Upload macOS Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/macos/${{ steps.find_macos_build.outputs.macos_build_file }}
          asset_name: ${{ steps.find_macos_build.outputs.macos_build_file }}
          asset_content_type: application/octet-stream

      - name: Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows/${{ steps.find_windows_build.outputs.windows_build_file }}
          asset_name: ${{ steps.find_windows_build.outputs.windows_build_file }}
          asset_content_type: application/octet-stream
